<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">


    <bean id="navieWaiterTarget" class="com.spring.aop.advisor.NavieWaiter"></bean>
    <bean id="sellerImplTarget" class="com.spring.aop.advisor.SellerImpl"></bean>

    <bean id="greetBeforeAdvice" class="com.spring.aop.advisor.GreetBeforeAdvice"></bean>

    <bean id="greetAfterReturnAdvice" class="com.spring.aop.advisor.GreetAfterReturnAdvice"></bean>
    <bean id="greetAroundAdvice" class="com.spring.aop.advisor.GreetAroundAdvice"></bean>

    <bean id="greetIntroductionInterceptor" class="com.spring.aop.advisor.GreetIntroductionInterceptor"></bean>


    <!--使用jdk 动态代理: 必须有代理的相关接口-->
    <bean id="navieWaiter" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:proxyInterfaces="com.spring.aop.advisor.Waiter"
          p:interceptorNames="greetBeforeAdvice"
          p:target-ref="navieWaiterTarget"></bean>

    <!--使用cglib动态代理,无需赋值属性:proxyInterfaces,即使赋值,也会被忽略-->
    <bean id="navieWaiterCglib" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetBeforeAdvice,greetAfterReturnAdvice"
          p:target-ref="navieWaiterTarget"
          p:optimize="true"></bean>

    <!--环绕增强-->
    <bean id="navieWaiterAound" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetAroundAdvice"
          p:target-ref="navieWaiterTarget"
          p:optimize="true"></bean>

    <!--引介增强-->
    <bean id="navieIntroductionInterceptor" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="greetIntroductionInterceptor"
          p:target-ref="navieWaiterTarget"
          p:interfaces="com.spring.aop.advisor.MonitorSwitch"
          p:optimize="true"></bean>


    <!--StaticMethodMatcherPointcutAdvisor:静态普通方法切面: pointCut & Advice-->
    <bean id="staticGreetAdvisor" class="com.spring.aop.advisor.StaticGreetAdvisor"
          p:advice-ref="greetBeforeAdvice"></bean>


    <bean id="abstractStaticGreetAdvisor" class="org.springframework.aop.framework.ProxyFactoryBean"
          p:interceptorNames="staticGreetAdvisor"
          p:optimize="true"></bean>

    <bean id="navieWaiterTargetStaticGreetAdvisor" parent="abstractStaticGreetAdvisor"
          p:target-ref="navieWaiterTarget"></bean>
    <bean id="sellerImplTargetStaticGreetAdvisor" parent="abstractStaticGreetAdvisor"
          p:target-ref="sellerImplTarget"></bean>


    <!--动态切面-->
    <bean id="dynamicDefaultPointcutAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor"
          p:advice-ref="greetBeforeAdvice">
        <property name="pointcut">
            <bean class="com.spring.aop.advisor.GreetDynamicMethodPointcut"></bean>
        </property>
    </bean>

    <bean id="abstractCreateProxy" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true"
          p:interceptorNames="dynamicDefaultPointcutAdvisor"
          p:optimize="true"></bean>

    <bean id="navieWaiterTargetDynamicGreetAdvisor" parent="abstractCreateProxy"
          p:target-ref="navieWaiterTarget"></bean>
    <bean id="sellerImplTargetDynamicGreetAdvisor" parent="abstractCreateProxy"
          p:target-ref="sellerImplTarget"></bean>


</beans>
